var songContent = '[00:20.00]晋太元中，武陵人捕鱼为业。\n[00:25.00]缘溪行，忘路之远近。\n[00:29.00]忽逢桃花林，夹岸数百步，\n[00:41.00]中无杂树，芳草鲜美，落英缤纷。\n[00:49.00]渔人甚异之。\n[00:53.00]复前行，欲穷其林。\n[00:58.00]林尽水源，便得一山，山有小口，\n[01:02.00]仿佛若有光。\n[01:07.00]便舍船，从口入。\n[01:12.00]初极狭，才通人。\n[01:16.00]复行数十步，豁然开朗。\n[01:22.00]土地平旷，屋舍俨然，有良田美池桑竹之属。\n[01:32.00]阡陌交通，鸡犬相闻。\n[01:37.00]其中往来种作，男女衣着，悉如外人。\n[01:44.00]黄发垂髫，并怡然自乐。\n[01:52.00]见渔人，乃大惊，问所从来。\n[01:58.00]具答之。\n[02:01.00]便要还家，设酒杀鸡作食。\n[02:06.00]村中闻有此人，咸来问讯。\n[02:11.00]自云先世避秦时乱，率妻子邑人来此绝境，\n[02:19.00]不复出焉，遂与外人间隔。\n[02:25.00]问今是何世，乃不知有汉，无论魏晋。\n[02:33.00]此人一一为具言所闻，皆叹惋。\n[02:40.00]余人各复延至其家，皆出酒食。\n[02:48.00]停数日，辞去。\n[02:51.00]此中人语云：“不足为外人道也。”\n[02:59.00]既出，得其船，便扶向路，处处志之。\n[03:07.00]及郡下，诣太守，说如此。\n[03:13.00]太守即遣人随其往，寻向所志，遂迷，不复得路。\n[03:23.00]南阳刘子骥，高尚士也，闻之，欣然规往。\n[03:32.00]未果，寻病终，后遂无问津者。';
function parseLyric(text) {
    //将文本分隔成一行一行，存入数组
    var lines = text.split('\n'),
        //用于匹配时间的正则表达式，匹配的结果类似[xx:xx.xx]
        pattern = /\[\d{2}:\d{2}.\d{2}\]/g,
        //保存最终结果的数组
        result = [];
    //去掉不含时间的行
    while (!pattern.test(lines[0])) {
        lines = lines.slice(1);
    };
    //上面用'\n'生成生成数组时，结果中最后一个为空元素，这里将去掉
    lines[lines.length - 1].length === 0 && lines.pop();
    lines.forEach(function(v /*数组元素值*/ , i /*元素索引*/ , a /*数组本身*/ ) {
        //提取出时间[xx:xx.xx]
        
        var time = v.match(pattern),
            //提取歌词
            value = v.replace(pattern, '');
        //因为一行里面可能有多个时间，所以time有可能是[xx:xx.xx][xx:xx.xx][xx:xx.xx]的形式，需要进一步分隔
        time.forEach(function(v1, i1, a1) {
            //去掉时间里的中括号得到xx:xx.xx
            var t = v1.slice(1, -1).split(':');
            //将结果压入最终数组
            result.push([parseInt(t[0], 10) * 60 + parseFloat(t[1]), value]);
        });
    });
    //最后将结果数组中的元素按时间大小排序，以便保存之后正常显示歌词
    result.sort(function(a, b) {
        return a[0] - b[0];
    });
    return result;
}

